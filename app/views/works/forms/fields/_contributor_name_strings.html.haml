-# encoding: UTF-8
-# Add an contributors field, with Auto-Complete.
-# Also adds a list of existing contributors

-# Get the roles for this work subklass
-# Need arrays for the select box: <option value="Author">Author</option>
- roles = @work.all_contributor_roles

-# if name strings are explicitly passed then use them, otherwise collect them from the work
- contributors = @editor_name_strings if @editor_name_strings
- contributors ||= @work.work_name_strings.reject{|wns| wns.role == @work.creator_role}.collect{ |wns| {:name => wns.name_string.name.force_encoding(Encoding::UTF_8).encode(Encoding::UTF_8), :role => wns.role}} if @work.name_strings

.author_block
  = label :author, :string, t('works.forms.fields.contributor_name_strings.label')
  %span.instructions= t('works.forms.fields.contributor_name_strings.instructions')

  %ol#contributor_name_strings_list
    -# Build list of contributors
    - if contributors.empty?
      %li.list_item{:id => "contributor_0", :class => "movable"}
        %select{:id => "contributor_roles[]", :name => "contributor_roles[]"}
          - roles.each do |r|
            %option{:value => r, :selected => selected_if_equal(r, roles[0])}= t_work_role_name(r)
        = text_field_tag "contributors[]", nil, {:class=>'text'}
        = link_to t('works.forms.fields.contributor_name_strings.remove'), '', class: 'remove_enclosing_list_item'
    -else
      - contributors.each_with_index do |contributor, i|
        = render 'works/forms/fields/contributor_list_item', :ns_id=> i, :ns_name=>contributor[:name].force_encoding(Encoding::UTF_8).encode(Encoding::UTF_8), :ns_role=>contributor[:role]

  = link_to t('works.forms.fields.contributor_name_strings.add'), '', class: 'add_contributor_list_item'
